#!/usr/bin/env python3
"""
Syst√®me de Gestion d'Appareils - GESTIA
=======================================

Ce programme impl√©mente un syst√®me complet de gestion d'appareils
avec tests, diagnostics et r√©parations bas√© sur le diagramme de classe fourni.

Fonctionnalit√©s :
- Gestion des appareils (cr√©ation, consultation, modification d'√©tat)
- Gestion des techniciens
- Sessions de test avec programmes multiples
- Crit√®res de validation
- Diagnostics et r√©parations
- Statistiques et rapports

Auteur : Assistant IA
Date : 2024
"""

import sys
import os

# Ajouter le r√©pertoire src au path pour les imports
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def initialize_system():
    """Hook d'initialisation du syst√®me"""
    print("üîß Initialisation du syst√®me...")
    
    # Hook 1: V√©rifications de base de donn√©es
    try:
        from gestia.core.migration_manager import auto_migrate_on_startup
        auto_migrate_on_startup(verbose=True)
    except Exception as e:
        print(f"‚ö†Ô∏è Erreur migrations: {e}")
    
    # Hook 2: V√©rifications de configuration
    try:
        check_configuration()
    except Exception as e:
        print(f"‚ö†Ô∏è Erreur configuration: {e}")
    
    # Hook 3: Autres v√©rifications...
    # ...

def main():
    """Point d'entr√©e principal"""
    # 1. Initialisation (hooks)
    initialize_system()
    
    # 2. D√©marrage de l'application
    start_application()

if __name__ == "__main__":
    main() 