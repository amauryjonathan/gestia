[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gestia"
version = "1.0.0"
description = "SystÃ¨me de Gestion d'Appareils avec Interface Graphique"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Assistant IA", email = "assistant@example.com"}
]
maintainers = [
    {name = "Assistant IA", email = "assistant@example.com"}
]
keywords = ["gestion", "appareils", "tests", "interface", "tkinter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.scripts]
gestia = "main:main"
gestia-gui = "gestia.ui.gui:main"
gestia-console = "gestia.ui.console:main"

[project.urls]
Homepage = "https://github.com/example/gestia"
Repository = "https://github.com/example/gestia"
Documentation = "https://github.com/example/gestia#readme"
Issues = "https://github.com/example/gestia/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/gestia",
    "--cov-report=term-missing",
    "--cov-report=html",
] 